# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T12:06:07+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, List, Optional

from pydantic import BaseModel, Field, RootModel, conint, constr


class AlarmModelName(
    RootModel[constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=128)]
):
    root: constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=128)


class AlarmModelVersion(RootModel[constr(min_length=1, max_length=128)]):
    root: constr(min_length=1, max_length=128)


class AlarmStateName(Enum):
    DISABLED = 'DISABLED'
    NORMAL = 'NORMAL'
    ACTIVE = 'ACTIVE'
    ACKNOWLEDGED = 'ACKNOWLEDGED'
    SNOOZE_DISABLED = 'SNOOZE_DISABLED'
    LATCHED = 'LATCHED'


class ComparisonOperator(Enum):
    GREATER = 'GREATER'
    GREATER_OR_EQUAL = 'GREATER_OR_EQUAL'
    LESS = 'LESS'
    LESS_OR_EQUAL = 'LESS_OR_EQUAL'
    EQUAL = 'EQUAL'
    NOT_EQUAL = 'NOT_EQUAL'


class CustomerActionName(Enum):
    SNOOZE = 'SNOOZE'
    ENABLE = 'ENABLE'
    DISABLE = 'DISABLE'
    ACKNOWLEDGE = 'ACKNOWLEDGE'
    RESET = 'RESET'


class DescribeAlarmRequest(BaseModel):
    pass


class DescribeDetectorRequest(BaseModel):
    pass


class DetectorModelName(
    RootModel[constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=128)]
):
    root: constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=128)


class DetectorModelVersion(RootModel[constr(min_length=1, max_length=128)]):
    root: constr(min_length=1, max_length=128)


class EphemeralInputName(
    RootModel[
        constr(pattern=r'^[a-zA-Z0-9][a-zA-Z0-9_.-]*$', min_length=1, max_length=128)
    ]
):
    root: constr(pattern=r'^[a-zA-Z0-9][a-zA-Z0-9_.-]*$', min_length=1, max_length=128)


class EpochMilliTimestamp(RootModel[conint(ge=1, le=9223372036854776000)]):
    root: conint(ge=1, le=9223372036854776000)


class ErrorCode(Enum):
    ResourceNotFoundException = 'ResourceNotFoundException'
    InvalidRequestException = 'InvalidRequestException'
    InternalFailureException = 'InternalFailureException'
    ServiceUnavailableException = 'ServiceUnavailableException'
    ThrottlingException = 'ThrottlingException'


class ErrorMessage(RootModel[str]):
    root: str


class EventType(Enum):
    STATE_CHANGE = 'STATE_CHANGE'


class InputPropertyValue(RootModel[str]):
    root: str


class InternalFailureException(RootModel[Any]):
    root: Any


class InvalidRequestException(RootModel[Any]):
    root: Any


class KeyValue(
    RootModel[constr(pattern=r'^[a-zA-Z0-9\-_:]+$', min_length=1, max_length=128)]
):
    root: constr(pattern=r'^[a-zA-Z0-9\-_:]+$', min_length=1, max_length=128)


class ListAlarmsRequest(BaseModel):
    pass


class ListDetectorsRequest(BaseModel):
    pass


class MaxResults(RootModel[conint(ge=1, le=250)]):
    root: conint(ge=1, le=250)


class MessageId(
    RootModel[constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=64)]
):
    root: constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=64)


class NextToken(RootModel[str]):
    root: str


class Note(RootModel[constr(max_length=256)]):
    root: constr(max_length=256)


class Payload(RootModel[str]):
    root: str


class RequestId(
    RootModel[constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=64)]
):
    root: constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=64)


class ResetActionConfiguration(BaseModel):
    note: Optional[Note] = None


class ResetAlarmActionRequest(BaseModel):
    alarmModelName: AlarmModelName
    keyValue: Optional[KeyValue] = None
    note: Optional[Note] = None
    requestId: RequestId


class ResetAlarmActionRequests(RootModel[List[ResetAlarmActionRequest]]):
    root: List[ResetAlarmActionRequest] = Field(..., min_length=1)


class ResourceNotFoundException(RootModel[Any]):
    root: Any


class Seconds(RootModel[int]):
    root: int


class ServiceUnavailableException(RootModel[Any]):
    root: Any


class Severity(RootModel[conint(ge=0, le=2147483647)]):
    root: conint(ge=0, le=2147483647)


class SnoozeDuration(RootModel[int]):
    root: int


class StateName(RootModel[constr(min_length=1, max_length=128)]):
    root: constr(min_length=1, max_length=128)


class ThresholdValue(RootModel[str]):
    root: str


class ThrottlingException(RootModel[Any]):
    root: Any


class TimerName(RootModel[constr(min_length=1, max_length=128)]):
    root: constr(min_length=1, max_length=128)


class Timestamp(RootModel[datetime]):
    root: datetime


class TimestampValue(BaseModel):
    timeInMillis: Optional[EpochMilliTimestamp] = None


class TriggerType(Enum):
    SNOOZE_TIMEOUT = 'SNOOZE_TIMEOUT'


class VariableName(
    RootModel[constr(pattern=r'^[a-zA-Z][a-zA-Z0-9_]*$', min_length=1, max_length=128)]
):
    root: constr(pattern=r'^[a-zA-Z][a-zA-Z0-9_]*$', min_length=1, max_length=128)


class VariableValue(RootModel[constr(min_length=1, max_length=1024)]):
    root: constr(min_length=1, max_length=1024)


class AlarmsResetPostRequest(BaseModel):
    resetActionRequests: List[ResetAlarmActionRequest] = Field(
        ...,
        description='The list of reset action requests. You can specify up to 10 requests per operation.',
        min_length=1,
    )


class AcknowledgeActionConfiguration(BaseModel):
    note: Optional[Note] = None


class AcknowledgeAlarmActionRequest(BaseModel):
    alarmModelName: AlarmModelName
    keyValue: Optional[KeyValue] = None
    note: Optional[Note] = None
    requestId: RequestId


class AcknowledgeAlarmActionRequests(RootModel[List[AcknowledgeAlarmActionRequest]]):
    root: List[AcknowledgeAlarmActionRequest] = Field(..., min_length=1)


class AlarmSummary(BaseModel):
    alarmModelName: Optional[AlarmModelName] = None
    alarmModelVersion: Optional[AlarmModelVersion] = None
    creationTime: Optional[Timestamp] = None
    keyValue: Optional[KeyValue] = None
    lastUpdateTime: Optional[Timestamp] = None
    stateName: Optional[AlarmStateName] = None


class BatchAcknowledgeAlarmRequest(BaseModel):
    acknowledgeActionRequests: AcknowledgeAlarmActionRequests


class BatchAlarmActionErrorEntry(BaseModel):
    errorCode: Optional[ErrorCode] = None
    errorMessage: Optional[ErrorMessage] = None
    requestId: Optional[RequestId] = None


class BatchDeleteDetectorErrorEntry(BaseModel):
    errorCode: Optional[ErrorCode] = None
    errorMessage: Optional[ErrorMessage] = None
    messageId: Optional[MessageId] = None


class BatchPutMessageErrorEntry(BaseModel):
    errorCode: Optional[ErrorCode] = None
    errorMessage: Optional[ErrorMessage] = None
    messageId: Optional[MessageId] = None


class BatchResetAlarmRequest(BaseModel):
    resetActionRequests: ResetAlarmActionRequests


class BatchUpdateDetectorErrorEntry(BaseModel):
    errorCode: Optional[ErrorCode] = None
    errorMessage: Optional[ErrorMessage] = None
    messageId: Optional[MessageId] = None


class DeleteDetectorRequest(BaseModel):
    detectorModelName: DetectorModelName
    keyValue: Optional[KeyValue] = None
    messageId: MessageId


class DeleteDetectorRequests(RootModel[List[DeleteDetectorRequest]]):
    root: List[DeleteDetectorRequest] = Field(..., min_length=1)


class DetectorStateSummary(BaseModel):
    stateName: Optional[StateName] = None


class DetectorSummary(BaseModel):
    creationTime: Optional[Timestamp] = None
    detectorModelName: Optional[DetectorModelName] = None
    detectorModelVersion: Optional[DetectorModelVersion] = None
    keyValue: Optional[KeyValue] = None
    lastUpdateTime: Optional[Timestamp] = None
    state: Optional[DetectorStateSummary] = None


class DisableActionConfiguration(BaseModel):
    note: Optional[Note] = None


class DisableAlarmActionRequest(BaseModel):
    alarmModelName: AlarmModelName
    keyValue: Optional[KeyValue] = None
    note: Optional[Note] = None
    requestId: RequestId


class DisableAlarmActionRequests(RootModel[List[DisableAlarmActionRequest]]):
    root: List[DisableAlarmActionRequest] = Field(..., min_length=1)


class EnableActionConfiguration(BaseModel):
    note: Optional[Note] = None


class EnableAlarmActionRequest(BaseModel):
    alarmModelName: AlarmModelName
    keyValue: Optional[KeyValue] = None
    note: Optional[Note] = None
    requestId: RequestId


class EnableAlarmActionRequests(RootModel[List[EnableAlarmActionRequest]]):
    root: List[EnableAlarmActionRequest] = Field(..., min_length=1)


class Message(BaseModel):
    inputName: EphemeralInputName
    messageId: MessageId
    payload: Payload
    timestamp: Optional[TimestampValue] = None


class Messages(RootModel[List[Message]]):
    root: List[Message] = Field(..., min_length=1)


class SimpleRuleEvaluation(BaseModel):
    inputPropertyValue: Optional[InputPropertyValue] = None
    operator: Optional[ComparisonOperator] = None
    thresholdValue: Optional[ThresholdValue] = None


class SnoozeActionConfiguration(BaseModel):
    note: Optional[Note] = None
    snoozeDuration: Optional[SnoozeDuration] = None


class SnoozeAlarmActionRequest(BaseModel):
    alarmModelName: AlarmModelName
    keyValue: Optional[KeyValue] = None
    note: Optional[Note] = None
    requestId: RequestId
    snoozeDuration: SnoozeDuration


class SnoozeAlarmActionRequests(RootModel[List[SnoozeAlarmActionRequest]]):
    root: List[SnoozeAlarmActionRequest] = Field(..., min_length=1)


class StateChangeConfiguration(BaseModel):
    triggerType: Optional[TriggerType] = None


class SystemEvent(BaseModel):
    eventType: Optional[EventType] = None
    stateChangeConfiguration: Optional[StateChangeConfiguration] = None


class Timer(BaseModel):
    name: TimerName
    timestamp: Timestamp


class TimerDefinition(BaseModel):
    name: TimerName
    seconds: Seconds


class TimerDefinitions(RootModel[List[TimerDefinition]]):
    root: List[TimerDefinition]


class Timers(RootModel[List[Timer]]):
    root: List[Timer]


class Variable(BaseModel):
    name: VariableName
    value: VariableValue


class VariableDefinition(BaseModel):
    name: VariableName
    value: VariableValue


class VariableDefinitions(RootModel[List[VariableDefinition]]):
    root: List[VariableDefinition]


class Variables(RootModel[List[Variable]]):
    root: List[Variable]


class AlarmsAcknowledgePostRequest(BaseModel):
    acknowledgeActionRequests: List[AcknowledgeAlarmActionRequest] = Field(
        ...,
        description='The list of acknowledge action requests. You can specify up to 10 requests per operation.',
        min_length=1,
    )


class AlarmsDisablePostRequest(BaseModel):
    disableActionRequests: List[DisableAlarmActionRequest] = Field(
        ...,
        description='The list of disable action requests. You can specify up to 10 requests per operation.',
        min_length=1,
    )


class AlarmsEnablePostRequest(BaseModel):
    enableActionRequests: List[EnableAlarmActionRequest] = Field(
        ...,
        description='The list of enable action requests. You can specify up to 10 requests per operation.',
        min_length=1,
    )


class AlarmsSnoozePostRequest(BaseModel):
    snoozeActionRequests: List[SnoozeAlarmActionRequest] = Field(
        ...,
        description='The list of snooze action requests. You can specify up to 10 requests per operation.',
        min_length=1,
    )


class DetectorsDeletePostRequest(BaseModel):
    detectors: List[DeleteDetectorRequest] = Field(
        ...,
        description='The list of one or more detectors to be deleted.',
        min_length=1,
    )


class InputsMessagesPostRequest(BaseModel):
    messages: List[Message] = Field(
        ...,
        description='The list of messages to send. Each message has the following format: <code>\'{ "messageId": "string", "inputName": "string", "payload": "string"}\'</code> ',
        min_length=1,
    )


class AlarmSummaries(RootModel[List[AlarmSummary]]):
    root: List[AlarmSummary]


class BatchAlarmActionErrorEntries(RootModel[List[BatchAlarmActionErrorEntry]]):
    root: List[BatchAlarmActionErrorEntry]


class BatchDeleteDetectorErrorEntries(RootModel[List[BatchDeleteDetectorErrorEntry]]):
    root: List[BatchDeleteDetectorErrorEntry]


class BatchDeleteDetectorRequest(BaseModel):
    detectors: DeleteDetectorRequests


class BatchDeleteDetectorResponse(BaseModel):
    batchDeleteDetectorErrorEntries: Optional[BatchDeleteDetectorErrorEntries] = None


class BatchDisableAlarmRequest(BaseModel):
    disableActionRequests: DisableAlarmActionRequests


class BatchDisableAlarmResponse(BaseModel):
    errorEntries: Optional[BatchAlarmActionErrorEntries] = None


class BatchEnableAlarmRequest(BaseModel):
    enableActionRequests: EnableAlarmActionRequests


class BatchEnableAlarmResponse(BaseModel):
    errorEntries: Optional[BatchAlarmActionErrorEntries] = None


class BatchPutMessageErrorEntries(RootModel[List[BatchPutMessageErrorEntry]]):
    root: List[BatchPutMessageErrorEntry]


class BatchPutMessageRequest(BaseModel):
    messages: Messages


class BatchPutMessageResponse(BaseModel):
    BatchPutMessageErrorEntries_1: Optional[BatchPutMessageErrorEntries] = Field(
        None, alias='BatchPutMessageErrorEntries'
    )


class BatchResetAlarmResponse(BaseModel):
    errorEntries: Optional[BatchAlarmActionErrorEntries] = None


class BatchSnoozeAlarmRequest(BaseModel):
    snoozeActionRequests: SnoozeAlarmActionRequests


class BatchSnoozeAlarmResponse(BaseModel):
    errorEntries: Optional[BatchAlarmActionErrorEntries] = None


class BatchUpdateDetectorErrorEntries(RootModel[List[BatchUpdateDetectorErrorEntry]]):
    root: List[BatchUpdateDetectorErrorEntry]


class BatchUpdateDetectorResponse(BaseModel):
    batchUpdateDetectorErrorEntries: Optional[BatchUpdateDetectorErrorEntries] = None


class CustomerAction(BaseModel):
    acknowledgeActionConfiguration: Optional[AcknowledgeActionConfiguration] = None
    actionName: Optional[CustomerActionName] = None
    disableActionConfiguration: Optional[DisableActionConfiguration] = None
    enableActionConfiguration: Optional[EnableActionConfiguration] = None
    resetActionConfiguration: Optional[ResetActionConfiguration] = None
    snoozeActionConfiguration: Optional[SnoozeActionConfiguration] = None


class DetectorState(BaseModel):
    stateName: StateName
    timers: Timers
    variables: Variables


class DetectorStateDefinition(BaseModel):
    stateName: StateName
    timers: TimerDefinitions
    variables: VariableDefinitions


class DetectorSummaries(RootModel[List[DetectorSummary]]):
    root: List[DetectorSummary]


class ListAlarmsResponse(BaseModel):
    alarmSummaries: Optional[AlarmSummaries] = None
    nextToken: Optional[NextToken] = None


class ListDetectorsResponse(BaseModel):
    detectorSummaries: Optional[DetectorSummaries] = None
    nextToken: Optional[NextToken] = None


class RuleEvaluation(BaseModel):
    simpleRuleEvaluation: Optional[SimpleRuleEvaluation] = None


class UpdateDetectorRequest(BaseModel):
    detectorModelName: DetectorModelName
    keyValue: Optional[KeyValue] = None
    messageId: MessageId
    state: DetectorStateDefinition


class UpdateDetectorRequests(RootModel[List[UpdateDetectorRequest]]):
    root: List[UpdateDetectorRequest] = Field(..., min_length=1)


class DetectorsPostRequest(BaseModel):
    detectors: List[UpdateDetectorRequest] = Field(
        ...,
        description='The list of detectors (instances) to update, along with the values to update.',
        min_length=1,
    )


class AlarmState(BaseModel):
    customerAction: Optional[CustomerAction] = None
    ruleEvaluation: Optional[RuleEvaluation] = None
    stateName: Optional[AlarmStateName] = None
    systemEvent: Optional[SystemEvent] = None


class BatchAcknowledgeAlarmResponse(BaseModel):
    errorEntries: Optional[BatchAlarmActionErrorEntries] = None


class BatchUpdateDetectorRequest(BaseModel):
    detectors: UpdateDetectorRequests


class Detector(BaseModel):
    creationTime: Optional[Timestamp] = None
    detectorModelName: Optional[DetectorModelName] = None
    detectorModelVersion: Optional[DetectorModelVersion] = None
    keyValue: Optional[KeyValue] = None
    lastUpdateTime: Optional[Timestamp] = None
    state: Optional[DetectorState] = None


class Alarm(BaseModel):
    alarmModelName: Optional[AlarmModelName] = None
    alarmModelVersion: Optional[AlarmModelVersion] = None
    alarmState: Optional[AlarmState] = None
    creationTime: Optional[Timestamp] = None
    keyValue: Optional[KeyValue] = None
    lastUpdateTime: Optional[Timestamp] = None
    severity: Optional[Severity] = None


class DescribeAlarmResponse(BaseModel):
    alarm: Optional[Alarm] = None


class DescribeDetectorResponse(BaseModel):
    detector: Optional[Detector] = None
